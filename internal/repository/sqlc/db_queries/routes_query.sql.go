// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: routes_query.sql

package db_queries

import (
	"context"
)

const routeDistance = `-- name: RouteDistance :one
SELECT  round (CAST( ST_DistanceSphere( ST_MakePoint($1,$2),ST_MakePoint($3,$4)) AS numeric )) AS meters
`

type RouteDistanceParams struct {
	StMakepoint   interface{}
	StMakepoint_2 interface{}
	StMakepoint_3 interface{}
	StMakepoint_4 interface{}
}

func (q *Queries) RouteDistance(ctx context.Context, arg RouteDistanceParams) (float64, error) {
	row := q.db.QueryRowContext(ctx, routeDistance,
		arg.StMakepoint,
		arg.StMakepoint_2,
		arg.StMakepoint_3,
		arg.StMakepoint_4,
	)
	var meters float64
	err := row.Scan(&meters)
	return meters, err
}
